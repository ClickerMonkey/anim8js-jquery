{"version":3,"sources":["anim8js-jquery.min.js"],"names":["root","factory","define","amd","anim8","jQuery","module","exports","require","global","this","window","FactoryJQuery","priority","anim8s","Factory","Class","Factories","$animation","animation","extend","is","subject","animatorFor","dom","destroy","animator","animatorsFor","animators","each","push","attribute","attr","fn","m8","m8s","get","cloner","clone","apply","arguments","removeAttr","elementAttribute","dataPlay","animationAttribute","all","cache","options","filter","animationText","data","play","dataQueue","queue","dataTransition","transition","sequence","html","wrapCharacters","find","tagName","attributes","tagBegin","tagEnd","contents","nodeType","text","length","previousSpace","i","space","outer","outerHTML","firstChild","start","quotes","c","substring","toLowerCase"],"mappings":"CAEC,SAAUA,EAAMC,GAEO,kBAAXC,SAAyBA,OAAOC,IAGzCD,QAAQ,UAAW,UAAW,SAASE,EAAOC,GAC5C,MAAOJ,GAAQG,EAAOC,EAAQL,KAGP,gBAAXM,SAAuBA,OAAOC,QAK5CD,OAAOC,QAAUN,EAAQO,QAAQ,WAAYA,QAAQ,UAAWC,QAKhER,EAAQD,EAAKI,MAAOJ,EAAKK,OAAQL,IAEnCU,KAAM,SAASN,EAAOC,EAAQM,GAahC,QAASC,KAEPF,KAAKG,SAAW,GAZhB,GAAIC,GAASV,EAAMU,OACfC,EAAUX,EAAMW,QAChBC,EAAQZ,EAAMY,MACdC,EAAYb,EAAMa,UAElBC,EAAad,EAAMe,SAUzBH,GAAMI,OAAQR,EAAeG,GAQ3BM,GAAI,SAASC,GAEX,MAAyB,mBAAXjB,IAA0BiB,YAAmBjB,IAS7DkB,YAAa,SAASD,GAEpB,MAAOL,GAAUO,IAAID,YAAaD,EAAQ,KAQ5CG,QAAS,SAASC,GAEhB,MAAOT,GAAUO,IAAIC,QAASC,IAUhCC,aAAc,SAASL,EAASM,GAE9BN,EAAQO,KAAK,WAEX,GAAIH,GAAWT,EAAUO,IAAID,YAAab,KAEtCgB,IAEFE,EAAUE,KAAMJ,MAWtBK,UAAW,SAASC,GAElB,MAAOf,GAAUO,IAAIO,UAAWC,MAWpC3B,EAAO4B,GAAGC,GAAK7B,EAAO4B,GAAG7B,MAAQC,EAAO4B,GAAGP,SAAW,WAEpD,MAAOtB,GAAOM,KAAK,KAQrBL,EAAO4B,GAAGE,IAAM9B,EAAO4B,GAAGnB,OAAST,EAAO4B,GAAGL,UAAY,WAEvD,MAAOd,GAAQJ,KAAK0B,OAStB,IAAIC,GAAShC,EAAO4B,GAAGK,KA+NrB,OA7NFjC,GAAO4B,GAAGK,MAAQ,WAEhB,GAAIA,GAAQD,EAAOE,MAAO7B,KAAM8B,UAIhC,OAFAF,GAAMG,WAAYxB,EAAUO,IAAIkB,kBAEzBJ,GAgBTjC,EAAO4B,GAAGU,SAAW,SAAUC,EAAoBC,EAAKC,GAEtD,GAAIC,KAEL,OAAOrC,MAAKsC,OAAO,WAElB,GAAIC,GAAgB5C,EAAOK,MAAMwC,KAAMN,EAEvC,IAAKK,EACL,CACI,GAAI9B,GAAYD,EAAY+B,EAAeF,EAASD,EAEpD,IAAK3B,KAAc,EAIjB,MAFAf,GAAOM,MAAOyC,KAAMhC,EAAW4B,EAASF,IAEjC,EAIb,OAAO,KAcTxC,EAAO4B,GAAGmB,UAAY,SAAUR,EAAoBE,GAElD,GAAIC,KAEL,OAAOrC,MAAKsC,OAAO,WAElB,GAAIC,GAAgB5C,EAAOK,MAAMwC,KAAMN,EAEvC,IAAKK,EACL,CACI,GAAI9B,GAAYD,EAAY+B,EAAeF,EAASD,EAEpD,IAAK3B,KAAc,EAIjB,MAFAf,GAAOM,MAAO2C,MAAOlC,IAEd,EAIb,OAAO,KAgBTd,EAAO4B,GAAGqB,eAAiB,SAAUV,EAAoBW,EAAYV,EAAKC,GAExE,GAAIC,KAEJ,OAAOrC,MAAKsC,OAAO,WAEjB,GAAIC,GAAgB5C,EAAOK,MAAMwC,KAAMN,EAEvC,IAAKK,EACL,CACE,GAAI9B,GAAYD,EAAY+B,EAAeF,EAASD,EAEpD,IAAK3B,KAAc,EAIjB,MAFAf,GAAOM,MAAO6C,WAAYA,EAAYpC,EAAW4B,EAASF,IAEnD,EAIX,OAAO,KAWXxC,EAAO4B,GAAGuB,SAAW,WAOnB,MALA9C,MAAKmB,KAAK,WAERxB,EAAOK,MAAM+C,KAAMpD,EAAOK,MAAMgD,eAAe,MAAO,wBAGjDhD,KAAKiD,KAAK,eAWnBtD,EAAO4B,GAAGyB,eAAiB,SAASE,EAASC,GAE3C,GAAIC,GAAW,IAAMF,GAAiC,gBAAfC,GAA0B,IAAMA,EAAa,IAAM,IACtFE,EAAS,KAAOH,EAAU,IAC1BH,EAAO,EAiEX,OA/DApD,GAAOK,MAAMsD,WAAWnC,KAAK,WAG3B,GAAsB,IAAlBnB,KAAKuD,SACT,CAEE,GAAIC,GAAOxD,KAAKwC,IAEhB,IAAIgB,EAAKC,OAAS,EAIhB,IAAK,GADDC,IAAgB,EACXC,EAAI,EAAGA,EAAIH,EAAKC,OAAQE,IACjC,CACE,GAAIC,GAAQJ,EAAKG,IAAM,GAClBC,IAAUF,IAEbX,GAAQK,EAAWI,EAAKG,GAAKN,GAE/BK,EAAgBE,MAKlBb,IAAQS,MAIZ,CAEE,GAAIK,GAAQ7D,KAAK8D,SAEjB,IAAI9D,KAAK+D,WACT,CAIE,IAFA,GAAIC,GAAQ,EACRC,GAAS,EACND,EAAQH,EAAMJ,QACrB,CACE,GAAIS,GAAIL,EAAMG,IACd,IAAU,MAANE,GAAmB,MAANA,EAEfD,GAAUA,MAEP,IAAU,OAANC,EAEPF,QAEG,IAAU,MAANE,IAAcD,EAErB,MAGJlB,GAAQc,EAAMM,UAAU,EAAGH,GAASrE,EAAOK,MAAMgD,eAAeE,GAAW,KAAOlD,KAAKkD,QAAQkB,cAAgB,QAK/GrB,IAAQc,KAKPd,GAMPrD,EAAMa,UAAkB,OAAI,GAAIL,GAGhCR,EAAMQ,cAAgBA,EAEfR","file":"anim8js-jquery.min.js","sourcesContent":["/* anim8js-jquery 1.0.6 - anim8 your HTML elements with jQuery by Philip Diffenderfer */\n// UMD (Universal Module Definition)\n(function (root, factory)\n{\n  if (typeof define === 'function' && define.amd) // jshint ignore:line\n  {\n    // AMD. Register as an anonymous module.\n    define(['anim8js', 'jquery'], function(anim8, jQuery) { // jshint ignore:line\n      return factory(anim8, jQuery, root);\n    });\n  }\n  else if (typeof module === 'object' && module.exports)  // jshint ignore:line\n  {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(require('anim8js'), require('jquery'), global);  // jshint ignore:line\n  }\n  else\n  {\n    // Browser globals (root is window)\n    factory(root.anim8, root.jQuery, root);\n  }\n}(this, function(anim8, jQuery, window)\n{\n\n  var anim8s = anim8.anim8s;\n  var Factory = anim8.Factory;\n  var Class = anim8.Class;\n  var Factories = anim8.Factories;\n\n  var $animation = anim8.animation;\n\n/**\n * A factory for jQuery objects.\n */\nfunction FactoryJQuery()\n{\n  this.priority = 10;\n}\n\nClass.extend( FactoryJQuery, Factory,\n{\n  /**\n   * Determines whether the given subject is valid for this factory to create Animators for.\n   *\n   * @param  {any} subject\n   * @return {boolean}\n   */\n  is: function(subject)\n  {\n    return typeof jQuery !== 'undefined' && subject instanceof jQuery;\n  },\n\n  /**\n   * Returns an animator given a subject.\n   *\n   * @param  {any} subject\n   * @return {anim8.Animator}\n   */\n  animatorFor: function(subject)\n  {\n    return Factories.dom.animatorFor( subject[0] );\n  },\n\n  /**\n   * Destroys the animator by unlinking the animator from the subject.\n   *\n   * @param  {anim8.Animator} animator\n   */\n  destroy: function(animator)\n  {\n    return Factories.dom.destroy( animator );\n  },\n\n  /**\n   * Explodes the given subject to an array of Animators and adds them to the given array.\n   *\n   * @param  {any} subject\n   * @param  {array} animators\n   * @return {void}\n   */\n  animatorsFor: function(subject, animators)\n  {\n    subject.each(function()\n    {\n      var animator = Factories.dom.animatorFor( this );\n\n      if (animator)\n      {\n        animators.push( animator );\n      }\n    });\n  },\n\n  /**\n   * Returns the attribute descriptor for the given attribute.\n   *\n   * @param  {String} attr\n   * @return {Object}\n   */\n  attribute: function(attr)\n  {\n    return Factories.dom.attribute( attr );\n  }\n\n});\n\n\n/**\n * Adds the m8, anim8, and animator functions to jQuery. An instance of anim8.Animator will be returned.\n *\n * @return {anim8.Animator}\n */\njQuery.fn.m8 = jQuery.fn.anim8 = jQuery.fn.animator = function()\n{\n  return anim8( this[0] );\n};\n\n/**\n * Adds the m8s, anim8s, animators functions to jQuery. An instance of anim8.Animators will be returned.\n *\n * @return {anim8.Animators}\n */\njQuery.fn.m8s = jQuery.fn.anim8s = jQuery.fn.animators = function()\n{\n  return anim8s( this.get() );\n};\n\n\n/**\n * Extend the clone function to remove the attribute which stores the animator ID so clones get new animators.\n *\n * @return {jQuery}\n */\nvar cloner = jQuery.fn.clone;\n\njQuery.fn.clone = function()\n{\n  var clone = cloner.apply( this, arguments );\n\n  clone.removeAttr( Factories.dom.elementAttribute );\n\n  return clone;\n};\n\n\n\n/**\n * Plays the animation specified in the given data attribute.\n *\n * The returned jQuery object is reduced to the elements that had a valid animation attribute.\n *\n * @param  {string} animationAttribute\n * @param  [boolean] all\n * @param  [boolean] cache\n * @return {this}\n * @see anim8.Animator.play\n */\njQuery.fn.dataPlay = function( animationAttribute, all, cache )\n{\n  var options = {};\n\n\treturn this.filter(function()\n  {\n\t\tvar animationText = jQuery(this).data( animationAttribute );\n\n\t\tif ( animationText )\n\t\t{\n      var animation = $animation( animationText, options, cache );\n\n      if ( animation !== false )\n      {\n        anim8( this ).play( animation, options, all );\n\n        return true;\n      }\n\t\t}\n\n\t\treturn false;\n\t});\n};\n\n/**\n * Queues the animation specified in the given data attribute.\n *\n * The returned jQuery object is reduced to the elements that had a valid animation attribute.\n *\n * @param  {string} animationAttribute\n * @param  [boolean] cache\n * @return {this}\n * @see anim8.Animator.queue\n */\njQuery.fn.dataQueue = function( animationAttribute, cache )\n{\n  var options = {};\n\n\treturn this.filter(function()\n  {\n\t\tvar animationText = jQuery(this).data( animationAttribute );\n\n\t\tif ( animationText )\n\t\t{\n      var animation = $animation( animationText, options, cache );\n\n      if ( animation !== false )\n      {\n        anim8( this ).queue( animation );\n\n        return true;\n      }\n\t\t}\n\n\t\treturn false;\n  });\n};\n\n/**\n * Transitions into the animation specified in the given data attribute.\n *\n * The returned jQuery object is reduced to the elements that had a valid animation attribute.\n *\n * @param  {string} animationAttribute\n * @param  {number} transitionTime\n * @param  {number} transitionDelta\n * @param  {string|function} transitionEasing\n * @param  {boolean} cache\n * @return {this}\n */\njQuery.fn.dataTransition = function( animationAttribute, transition, all, cache )\n{\n  var options = {};\n\n  return this.filter(function()\n  {\n    var animationText = jQuery(this).data( animationAttribute );\n\n    if ( animationText )\n    {\n      var animation = $animation( animationText, options, cache );\n\n      if ( animation !== false )\n      {\n        anim8( this ).transition( transition, animation, options, all );\n\n        return true;\n      }\n    }\n\n    return false;\n  });\n};\n\n\n/**\n * Wraps every character with a span and the class sequenced and returns a jquery\n * element containing all wrapped characters.\n *\n * @return {jQuery}\n */\njQuery.fn.sequence = function()\n{\n  this.each(function()\n  {\n    jQuery(this).html( jQuery(this).wrapCharacters('div', 'class=\"sequenced\"') );\n  });\n\n  return this.find('.sequenced');\n};\n\n/**\n * Wraps every character in ever element in the jQuery object with a tag.\n * If an element already only has one character it remains untouched.\n *\n * @param  {string} tagName\n * @param  {string} attributes\n * @return {string} attributes\n */\njQuery.fn.wrapCharacters = function(tagName, attributes)\n{\n  var tagBegin = '<' + tagName + (typeof attributes === 'string' ? ' ' + attributes : '') + '>';\n  var tagEnd = '</' + tagName + '>';\n  var html = '';\n\n  jQuery(this).contents().each(function()\n  {\n    // Is this a text node?\n    if (this.nodeType === 3)\n    {\n      // Break up node wrapping each character\n      var text = this.data;\n\n      if (text.length > 1)\n      {\n        // Collapse whitespaces\n        var previousSpace = false;\n        for (var i = 0; i < text.length; i++)\n        {\n          var space = text[i] <= ' ';\n          if (!space || !previousSpace)\n          {\n            html += tagBegin + text[i] + tagEnd;\n          }\n          previousSpace = space;\n        }\n      }\n      else\n      {\n        html += text;\n      }\n    }\n    else\n    {\n      // Not a text node!\n      var outer = this.outerHTML;\n      // If there are children, we need to recursively break them down\n      if (this.firstChild)\n      {\n        // Grab the element tag and attributes manually.\n        var start = 0;\n        var quotes = false;\n        while (start < outer.length)\n        {\n          var c = outer[start++];\n          if (c === '\"' || c === \"'\")\n          {\n            quotes = !quotes;\n          }\n          else if (c === '\\\\')\n          {\n            start++;\n          }\n          else if (c === '>' && !quotes)\n          {\n            break;\n          }\n        }\n        html += outer.substring(0, start) + jQuery(this).wrapCharacters(tagName) + '</' + this.tagName.toLowerCase() + '>';\n      }\n      // No child nodes, just append outer HTML.\n      else\n      {\n        html += outer;\n      }\n    }\n  });\n\n  return html;\n};\n\n\n\n  // Register Factory\n  anim8.Factories['jquery'] = new FactoryJQuery();\n\n  // Classes\n  anim8.FactoryJQuery = FactoryJQuery;\n\n  return anim8;\n\n}));\n"],"sourceRoot":"/source/"}